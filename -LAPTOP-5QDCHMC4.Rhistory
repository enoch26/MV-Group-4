box.sy <- (bx[4] - bx[3]) / n
xx <- rep(box.cx, each = 2)
par(xpd = TRUE)
for(i in 1:n){
yy <- c(box.cy[1] + (box.sy * (i - 1)),
box.cy[1] + (box.sy * (i)),
box.cy[1] + (box.sy * (i)),
box.cy[1] + (box.sy * (i - 1)))
polygon(xx, yy, col = col[i], border = col[i])
}
par(new = TRUE)
plot(0, 0, type = "n",
ylim = c(min(lev), max(lev)),
yaxt = "n", ylab = "",
xaxt = "n", xlab = "",
frame.plot = FALSE)
axis(side = 5, las = 2, tick = FALSE, line = .01)
par <- opar
}
colr <- rev(heat.colors(100))
plot(pmovie$scores[, 1], pmovie$scores[, 2],
ylim = range(-10,8),
xlab = "PC1", ylab = "PC2", cex=0.6, lwd = 2, type = 'p',
col = colr[as.numeric(cut(imputed_data$gross,breaks = 100))], pch = 16)
legend.col(col = colr, lev = imputed_data$gross)
legend.col <- function(col, lev){
opar <- par
n <- length(col)
bx <- par("usr")
box.cx <- c(bx[2] + (bx[2] - bx[1]) / 1000,
bx[2] + (bx[2] - bx[1]) / 1000 + (bx[2] - bx[1]) / 50)
box.cy <- c(bx[3], bx[3])
box.sy <- (bx[4] - bx[3]) / n
xx <- rep(box.cx, each = 2)
par(xpd = TRUE)
for(i in 1:n){
yy <- c(box.cy[1] + (box.sy * (i - 1)),
box.cy[1] + (box.sy * (i)),
box.cy[1] + (box.sy * (i)),
box.cy[1] + (box.sy * (i - 1)))
polygon(xx, yy, col = col[i], border = col[i])
}
par(new = TRUE)
plot(0, 0, type = "n",
ylim = c(min(lev), max(lev)),
yaxt = "n", ylab = "",
xaxt = "n", xlab = "",
frame.plot = FALSE)
axis(side = 4, las = 3, tick = FALSE, line = .01)
par <- opar
}
colr <- rev(heat.colors(100))
plot(pmovie$scores[, 1], pmovie$scores[, 2],
ylim = range(-10,8),
xlab = "PC1", ylab = "PC2", cex=0.6, lwd = 2, type = 'p',
col = colr[as.numeric(cut(imputed_data$gross,breaks = 100))], pch = 16)
legend.col(col = colr, lev = imputed_data$gross)
legend.col <- function(col, lev){
opar <- par
n <- length(col)
bx <- par("usr")
box.cx <- c(bx[2] + (bx[2] - bx[1]) / 1000,
bx[2] + (bx[2] - bx[1]) / 1000 + (bx[2] - bx[1]) / 50)
box.cy <- c(bx[3], bx[3])
box.sy <- (bx[4] - bx[3]) / n
xx <- rep(box.cx, each = 2)
par(xpd = TRUE)
for(i in 1:n){
yy <- c(box.cy[1] + (box.sy * (i - 1)),
box.cy[1] + (box.sy * (i)),
box.cy[1] + (box.sy * (i)),
box.cy[1] + (box.sy * (i - 1)))
polygon(xx, yy, col = col[i], border = col[i])
}
par(new = TRUE)
plot(0, 0, type = "n",
ylim = c(min(lev), max(lev)),
yaxt = "n", ylab = "",
xaxt = "n", xlab = "",
frame.plot = FALSE)
axis(side = 4, las = 3, tick = FALSE, line = .05)
par <- opar
}
colr <- rev(heat.colors(100))
plot(pmovie$scores[, 1], pmovie$scores[, 2],
ylim = range(-10,8),
xlab = "PC1", ylab = "PC2", cex=0.6, lwd = 2, type = 'p',
col = colr[as.numeric(cut(imputed_data$gross,breaks = 100))], pch = 16)
legend.col(col = colr, lev = imputed_data$gross)
legend.col <- function(col, lev){
opar <- par
n <- length(col)
bx <- par("usr")
box.cx <- c(bx[2] + (bx[2] - bx[1]) / 1000,
bx[2] + (bx[2] - bx[1]) / 1000 + (bx[2] - bx[1]) / 50)
box.cy <- c(bx[3], bx[3])
box.sy <- (bx[4] - bx[3]) / n
xx <- rep(box.cx, each = 2)
par(xpd = TRUE)
for(i in 1:n){
yy <- c(box.cy[1] + (box.sy * (i - 1)),
box.cy[1] + (box.sy * (i)),
box.cy[1] + (box.sy * (i)),
box.cy[1] + (box.sy * (i - 1)))
polygon(xx, yy, col = col[i], border = col[i])
}
par(new = TRUE)
plot(0, 0, type = "n",
ylim = c(min(lev), max(lev)),
yaxt = "n", ylab = "",
xaxt = "n", xlab = "",
frame.plot = FALSE)
axis(side = 4, las = 3, tick = FALSE, line = .25)
par <- opar
}
colr <- rev(heat.colors(100))
plot(pmovie$scores[, 1], pmovie$scores[, 2],
ylim = range(-10,8),
xlab = "PC1", ylab = "PC2", cex=0.6, lwd = 2, type = 'p',
col = colr[as.numeric(cut(imputed_data$gross,breaks = 100))], pch = 16)
legend.col(col = colr, lev = imputed_data$gross)
legend.col <- function(col, lev){
opar <- par
n <- length(col)
bx <- par("usr")
box.cx <- c(bx[2] + (bx[2] - bx[1]) / 1000,
bx[2] + (bx[2] - bx[1]) / 1000 + (bx[2] - bx[1]) / 50)
box.cy <- c(bx[3], bx[3])
box.sy <- (bx[4] - bx[3]) / n
xx <- rep(box.cx, each = 2)
par(xpd = TRUE)
for(i in 1:n){
yy <- c(box.cy[1] + (box.sy * (i - 1)),
box.cy[1] + (box.sy * (i)),
box.cy[1] + (box.sy * (i)),
box.cy[1] + (box.sy * (i - 1)))
polygon(xx, yy, col = col[i], border = col[i])
}
par(new = TRUE)
plot(0, 0, type = "n",
ylim = c(min(lev), max(lev)),
yaxt = "n", ylab = "",
xaxt = "n", xlab = "",
frame.plot = FALSE)
axis(side = 4, las = 3, tick = FALSE, line = .01)
par <- opar
}
colr <- rev(heat.colors(100))
plot(pmovie$scores[, 1], pmovie$scores[, 2],
ylim = range(-10,8),
xlab = "PC1", ylab = "PC2", cex=0.6, lwd = 2, type = 'p',
col = colr[as.numeric(cut(imputed_data$gross,breaks = 100))], pch = 16)
legend.col(col = colr, lev = imputed_data$gross)
legend.col <- function(col, lev){
opar <- par
n <- length(col)
bx <- par("usr")
box.cx <- c(bx[2] + (bx[2] - bx[1]) / 1000,
bx[2] + (bx[2] - bx[1]) / 1000 + (bx[2] - bx[1]) / 50)
box.cy <- c(bx[3], bx[3])
box.sy <- (bx[4] - bx[3]) / n
xx <- rep(box.cx, each = 2)
par(xpd = TRUE)
for(i in 1:n){
yy <- c(box.cy[1] + (box.sy * (i - 1)),
box.cy[1] + (box.sy * (i)),
box.cy[1] + (box.sy * (i)),
box.cy[1] + (box.sy * (i - 1)))
polygon(xx, yy, col = col[i], border = col[i])
}
par(new = TRUE)
plot(0, 0, type = "n",
ylim = c(min(lev), max(lev)),
yaxt = "n", ylab = "",
xaxt = "n", xlab = "",
frame.plot = FALSE)
axis(side = 4, las = 2, tick = FALSE, line = .01)
par <- opar
}
colr <- rev(heat.colors(100))
plot(pmovie$scores[, 1], pmovie$scores[, 2],
ylim = range(-10,8),
xlab = "PC1", ylab = "PC2", cex=0.6, lwd = 2, type = 'p',
col = colr[as.numeric(cut(imputed_data$gross,breaks = 100))], pch = 16)
legend.col(col = colr, lev = imputed_data$gross)
legend.col <- function(col, lev){
opar <- par
n <- length(col)
bx <- par("usr")
box.cx <- c(bx[2] + (bx[2] - bx[1]) / 1000,
bx[2] + (bx[2] - bx[1]) / 1000 + (bx[2] - bx[1]) / 50)
box.cy <- c(bx[3], bx[3])
box.sy <- (bx[4] - bx[3]) / n
xx <- rep(box.cx, each = 2)
par(xpd = TRUE)
for(i in 1:n){
yy <- c(box.cy[1] + (box.sy * (i - 1)),
box.cy[1] + (box.sy * (i)),
box.cy[1] + (box.sy * (i)),
box.cy[1] + (box.sy * (i - 1)))
polygon(xx, yy, col = col[i], border = col[i])
}
par(new = TRUE)
plot(0, 0, type = "n",
ylim = c(min(lev), max(lev)),
yaxt = "n", ylab = "",
xaxt = "n", xlab = "",
frame.plot = FALSE)
axis(side = 4, las = 2, tick = FALSE, line = .25, cex.axis=0.1)
par <- opar
}
colr <- rev(heat.colors(100))
plot(pmovie$scores[, 1], pmovie$scores[, 2],
ylim = range(-10,8),
xlab = "PC1", ylab = "PC2", cex=0.6, lwd = 2, type = 'p',
col = colr[as.numeric(cut(imputed_data$gross,breaks = 100))], pch = 16)
legend.col(col = colr, lev = imputed_data$gross)
legend.col <- function(col, lev){
opar <- par
n <- length(col)
bx <- par("usr")
box.cx <- c(bx[2] + (bx[2] - bx[1]) / 1000,
bx[2] + (bx[2] - bx[1]) / 1000 + (bx[2] - bx[1]) / 50)
box.cy <- c(bx[3], bx[3])
box.sy <- (bx[4] - bx[3]) / n
xx <- rep(box.cx, each = 2)
par(xpd = TRUE)
for(i in 1:n){
yy <- c(box.cy[1] + (box.sy * (i - 1)),
box.cy[1] + (box.sy * (i)),
box.cy[1] + (box.sy * (i)),
box.cy[1] + (box.sy * (i - 1)))
polygon(xx, yy, col = col[i], border = col[i])
}
par(new = TRUE)
plot(0, 0, type = "n",
ylim = c(min(lev), max(lev)),
yaxt = "n", ylab = "",
xaxt = "n", xlab = "",
frame.plot = FALSE)
axis(side = 4, las = 2, tick = FALSE, line = .25, cex.axis=0.5)
par <- opar
}
colr <- rev(heat.colors(100))
plot(pmovie$scores[, 1], pmovie$scores[, 2],
ylim = range(-10,8),
xlab = "PC1", ylab = "PC2", cex=0.6, lwd = 2, type = 'p',
col = colr[as.numeric(cut(imputed_data$gross,breaks = 100))], pch = 16)
legend.col(col = colr, lev = imputed_data$gross)
legend.col <- function(col, lev){
opar <- par
n <- length(col)
bx <- par("usr")
box.cx <- c(bx[2] + (bx[2] - bx[1]) / 1000,
bx[2] + (bx[2] - bx[1]) / 1000 + (bx[2] - bx[1]) / 50)
box.cy <- c(bx[3], bx[3])
box.sy <- (bx[4] - bx[3]) / n
xx <- rep(box.cx, each = 2)
par(xpd = TRUE)
for(i in 1:n){
yy <- c(box.cy[1] + (box.sy * (i - 1)),
box.cy[1] + (box.sy * (i)),
box.cy[1] + (box.sy * (i)),
box.cy[1] + (box.sy * (i - 1)))
polygon(xx, yy, col = col[i], border = col[i])
}
par(new = TRUE)
plot(0, 0, type = "n",
ylim = c(min(lev), max(lev)),
yaxt = "n", ylab = "",
xaxt = "n", xlab = "",
frame.plot = FALSE)
axis(side = 4, las = 2, tick = FALSE, line = .25, cex.axis=0.3)
par <- opar
}
colr <- rev(heat.colors(100))
plot(pmovie$scores[, 1], pmovie$scores[, 2],
ylim = range(-10,8),
xlab = "PC1", ylab = "PC2", cex=0.6, lwd = 2, type = 'p',
col = colr[as.numeric(cut(imputed_data$gross,breaks = 100))], pch = 16)
legend.col(col = colr, lev = imputed_data$gross)
legend.col <- function(col, lev){
opar <- par
n <- length(col)
bx <- par("usr")
box.cx <- c(bx[2] + (bx[2] - bx[1]) / 1000,
bx[2] + (bx[2] - bx[1]) / 1000 + (bx[2] - bx[1]) / 50)
box.cy <- c(bx[3], bx[3])
box.sy <- (bx[4] - bx[3]) / n
xx <- rep(box.cx, each = 2)
par(xpd = TRUE)
for(i in 1:n){
yy <- c(box.cy[1] + (box.sy * (i - 1)),
box.cy[1] + (box.sy * (i)),
box.cy[1] + (box.sy * (i)),
box.cy[1] + (box.sy * (i - 1)))
polygon(xx, yy, col = col[i], border = col[i])
}
par(new = TRUE)
plot(0, 0, type = "n",
ylim = c(min(lev), max(lev)),
yaxt = "n", ylab = "",
xaxt = "n", xlab = "",
frame.plot = FALSE)
axis(side = 4, las = 2, tick = FALSE, line = .01, cex.axis=0.3)
par <- opar
}
colr <- rev(heat.colors(100))
plot(pmovie$scores[, 1], pmovie$scores[, 2],
ylim = range(-10,8),
xlab = "PC1", ylab = "PC2", cex=0.6, lwd = 2, type = 'p',
col = colr[as.numeric(cut(imputed_data$gross,breaks = 100))], pch = 16)
legend.col(col = colr, lev = imputed_data$gross)
legend.col <- function(col, lev){
opar <- par
n <- length(col)
bx <- par("usr")
box.cx <- c(bx[2] + (bx[2] - bx[1]) / 1000,
bx[2] + (bx[2] - bx[1]) / 1000 + (bx[2] - bx[1]) / 50)
box.cy <- c(bx[3], bx[3])
box.sy <- (bx[4] - bx[3]) / n
xx <- rep(box.cx, each = 2)
par(xpd = TRUE)
for(i in 1:n){
yy <- c(box.cy[1] + (box.sy * (i - 1)),
box.cy[1] + (box.sy * (i)),
box.cy[1] + (box.sy * (i)),
box.cy[1] + (box.sy * (i - 1)))
polygon(xx, yy, col = col[i], border = col[i])
}
par(new = TRUE)
plot(0, 0, type = "n",
ylim = c(min(lev), max(lev)),
yaxt = "n", ylab = "",
xaxt = "n", xlab = "",
frame.plot = FALSE)
axis(side = 4, las = 2, tick = FALSE, line = .01, cex.axis=0.5)
par <- opar
}
colr <- rev(heat.colors(100))
plot(pmovie$scores[, 1], pmovie$scores[, 2],
ylim = range(-10,8),
xlab = "PC1", ylab = "PC2", cex=0.6, lwd = 2, type = 'p',
col = colr[as.numeric(cut(imputed_data$gross,breaks = 100))], pch = 16)
legend.col(col = colr, lev = imputed_data$gross)
plot(pmovie$scores[, 1], pmovie$scores[, 2],
ylim = range(-10,8),
xlab = "PC1", ylab = "PC2", cex=0.6, lwd = 2, type = 'p',
col = imputed_data$Col, pch = 16)
legend.col(col = rbPal, lev = imputed_data$gross)
colr <- rev(rainbow(100))
plot(pmovie$scores[, 1], pmovie$scores[, 2],
ylim = range(-10,8),
xlab = "PC1", ylab = "PC2", cex=0.6, lwd = 2, type = 'p',
col = colr[as.numeric(cut(imputed_data$gross,breaks = 100))], pch = 16)
legend.col(col = colr, lev = imputed_data$gross)
colr <- rev(terrain.colors(100))
plot(pmovie$scores[, 1], pmovie$scores[, 2],
ylim = range(-10,8),
xlab = "PC1", ylab = "PC2", cex=0.6, lwd = 2, type = 'p',
col = colr[as.numeric(cut(imputed_data$gross,breaks = 100))], pch = 16)
legend.col(col = colr, lev = imputed_data$gross)
colr <- rev(topo.colors(100))
plot(pmovie$scores[, 1], pmovie$scores[, 2],
ylim = range(-10,8),
xlab = "PC1", ylab = "PC2", cex=0.6, lwd = 2, type = 'p',
col = colr[as.numeric(cut(imputed_data$gross,breaks = 100))], pch = 16)
legend.col(col = colr, lev = imputed_data$gross)
colr <- rev(cm.colors(100))
plot(pmovie$scores[, 1], pmovie$scores[, 2],
ylim = range(-10,8),
xlab = "PC1", ylab = "PC2", cex=0.6, lwd = 2, type = 'p',
col = colr[as.numeric(cut(imputed_data$gross,breaks = 100))], pch = 16)
legend.col(col = colr, lev = imputed_data$gross)
colr <- rev(terrain.colors(100))
plot(pmovie$scores[, 1], pmovie$scores[, 2],
ylim = range(-10,8),
xlab = "PC1", ylab = "PC2", cex=0.6, lwd = 2, type = 'p',
col = colr[as.numeric(cut(imputed_data$gross,breaks = 100))], pch = 16)
legend.col(col = colr, lev = imputed_data$gross)
legend.col <- function(col, lev){
opar <- par
n <- length(col)
bx <- par("usr")
box.cx <- c(bx[2] + (bx[2] - bx[1]) / 1000,
bx[2] + (bx[2] - bx[1]) / 1000 + (bx[2] - bx[1]) / 50)
box.cy <- c(bx[3], bx[3])
box.sy <- (bx[4] - bx[3]) / n
xx <- rep(box.cx, each = 2)
par(xpd = TRUE)
for(i in 1:n){
yy <- c(box.cy[1] + (box.sy * (i - 1)),
box.cy[1] + (box.sy * (i)),
box.cy[1] + (box.sy * (i)),
box.cy[1] + (box.sy * (i - 1)))
polygon(xx, yy, col = col[i], border = col[i])
}
par(new = TRUE)
plot(0, 0, type = "n",
ylim = c(min(lev), max(lev)),
yaxt = "n", ylab = "",
xaxt = "n", xlab = "",
frame.plot = FALSE)
axis(side = 4, las = 2, tick = FALSE, line = .01, cex.axis=0.5)
par <- opar
}
colr <- rev(terrain.colors(100))
plot(pmovie$scores[, 1], pmovie$scores[, 2],
ylim = range(-10,8),
xlab = "PC1", ylab = "PC2", cex=0.6, lwd = 2, type = 'p',
col = colr[as.numeric(cut(imputed_data$director_facebook_likes,breaks = 100))], pch = 16)
legend.col(col = colr, lev = imputed_data$director_facebook_likes)
legend.col <- function(col, lev){
opar <- par
n <- length(col)
bx <- par("usr")
box.cx <- c(bx[2] + (bx[2] - bx[1]) / 1000,
bx[2] + (bx[2] - bx[1]) / 1000 + (bx[2] - bx[1]) / 50)
box.cy <- c(bx[3], bx[3])
box.sy <- (bx[4] - bx[3]) / n
xx <- rep(box.cx, each = 2)
par(xpd = TRUE)
for(i in 1:n){
yy <- c(box.cy[1] + (box.sy * (i - 1)),
box.cy[1] + (box.sy * (i)),
box.cy[1] + (box.sy * (i)),
box.cy[1] + (box.sy * (i - 1)))
polygon(xx, yy, col = col[i], border = col[i])
}
par(new = TRUE)
plot(0, 0, type = "n",
ylim = c(min(lev), max(lev)),
yaxt = "n", ylab = "",
xaxt = "n", xlab = "",
frame.plot = FALSE)
axis(side = 4, las = 2, tick = FALSE, line = .01, cex.axis=0.5)
par <- opar
}
colr <- rev(terrain.colors(100))
plot(pmovie$scores[, 1], pmovie$scores[, 2],
ylim = range(-10,8),
xlab = "PC1", ylab = "PC2", cex=0.6, lwd = 2, type = 'p',
col = colr[as.numeric(cut(imputed_data$duration,breaks = 100))], pch = 16)
legend.col(col = colr, lev = imputed_data$duration)
plot(pmovie$scores[, 1], pmovie$scores[, 2],
ylim = range(-10,8),
xlab = "PC1", ylab = "PC2", cex=0.6, lwd = 2, type = 'p',
col = colr[as.numeric(cut(imputed_data$actor_1_facebook_likes,breaks = 100))], pch = 16)
legend.col(col = colr, lev = imputed_data$actor_1_facebook_likes)
plot(pmovie$scores[, 1], pmovie$scores[, 3],
ylim = range(-10,8),
xlab = "PC1", ylab = "PC2", cex=0.6, lwd = 2, type = 'p',
col = colr[as.numeric(cut(imputed_data$gross,breaks = 100))], pch = 16)
legend.col(col = colr, lev = imputed_data$gross)
# Biplot
biplot(pmovie,  xlabs=rep(".", nrow(imdbData_Clean)),
choices = c(1,2), cex = 0.5, main = "Biplot of PC1 and PC2")
# Biplot
biplot(pmovie,  xlabs=rep(".", nrow(imdbData_Clean)),
choices = c(1,3), cex = 0.5, main = "Biplot of PC1 and PC2")
# Biplot
biplot(pmovie,  xlabs=rep(".", nrow(imdbData_Clean)),
choices = c(2,3), cex = 0.5, main = "Biplot of PC1 and PC2")
# Biplot
biplot(pmovie,  xlabs=rep(".", nrow(imdbData_Clean)),
choices = c(1,3), cex = 0.5, main = "Biplot of PC1 and PC2")
# Biplot
biplot(pmovie,  xlabs=rep(".", nrow(imdbData_Clean)),
choices = c(1,3), cex = 0.5, main = "Biplot of PC1 and PC3")
plot(pmovie$scores[, 1], pmovie$scores[, 2],
ylim = range(-10,8),
xlab = "PC1", ylab = "PC2", cex=0.6, lwd = 2, type = 'p',
col = colr[imputed_data$language], pch = 16)
legend.col(col = colr, lev = imputed_data$language)
plot(pmovie$scores[, 1], pmovie$scores[, 3],
ylim = range(-10,8),
xlab = "PC1", ylab = "PC2", cex=0.6, lwd = 2, type = 'p',
col = colr[as.numeric(cut(imputed_data$gross,breaks = 100))], pch = 16)
legend.col(col = colr, lev = imputed_data$gross)
plot(pmovie$scores[, 2], pmovie$scores[, 3],
ylim = range(-10,8),
xlab = "PC1", ylab = "PC2", cex=0.6, lwd = 2, type = 'p',
col = colr[as.numeric(cut(imputed_data$gross,breaks = 100))], pch = 16)
legend.col(col = colr, lev = imputed_data$gross)
plot(pmovie$scores[, 2], pmovie$scores[, 3],
ylim = range(-10,8),
xlab = "PC1", ylab = "PC2", cex=0.6, lwd = 2, type = 'p',
col = colr[as.numeric(cut(imputed_data$title_year,breaks = 100))], pch = 16)
legend.col(col = colr, lev = imputed_data$title_year)
plot(pmovie$scores[, 2], pmovie$scores[, 3],
ylim = range(-10,8),
xlab = "PC2", ylab = "PC3", cex=0.6, lwd = 2, type = 'p',
col = colr[as.numeric(cut(imputed_data$title_year,breaks = 100))], pch = 16)
legend.col(col = colr, lev = imputed_data$title_year)
plot(pmovie$scores[, 1], pmovie$scores[, 3],
ylim = range(-10,8),
xlab = "PC1", ylab = "PC3", cex=0.6, lwd = 2, type = 'p',
col = colr[as.numeric(cut(imputed_data$title_year,breaks = 100))], pch = 16)
legend.col(col = colr, lev = imputed_data$title_year)
# LOAD LIBARARIES --------------------------------------------------------------
library(dplyr)
library(corrplot)
library(qgraph)
# Network graph
corrplot(cor(na.omit(numData)), method="ellipse")
qgraph(cor(na.omit(numData)))
# Network graph
corrplot(cor(na.omit(numData)), method="ellipse")
qgraph(cor(na.omit(numData)))
plots.dir.path <- list.files(tempdir(), pattern="rs-graphics", full.names = TRUE);
plots.png.paths <- list.files(plots.dir.path, pattern=".png", full.names = TRUE)
file.copy(from=plots.png.paths, to="../Scripts/output/")
